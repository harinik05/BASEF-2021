/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "0.4/uniform/functionObjects";
    object      functionObjectProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

results
{
    forces
    {
        vector
        {
            normalForce     ( 7.500857153923419 -5.430996128077736 1.248068247105018 );
            tangentialForce ( 33.99508318019344 0.1699288848548407 0.07553556986468858 );
            porousForce     ( 0 0 0 );
            normalMoment    ( 3.851304858039822 -4.368070158772433 -41.67314112720091 );
            tangentialMoment ( 0.2287576401229173 2.993922590734168 -78.17614276278209 );
            porousMoment    ( 0 0 0 );
        }
    }
    forceCoeffs
    {
        scalar
        {
            Cd              3.319675226729348;
            Cs              -0.1058883053575765;
            Cl              -0.4208853794578316;
            CmRoll          0.3264049998530191;
            CmPitch         9.587942711198638;
            CmYaw           -0.1099318054430612;
            Cd(f)           1.986242613217693;
            Cd(r)           1.333432613511655;
            Cs(f)           -0.1628759581218494;
            Cs(r)           0.05698765276427289;
            Cl(f)           9.377500021469722;
            Cl(r)           -9.798385400927554;
        }
    }
    surfaceFieldValue
    {
        scalar
        {
            areaAverage(peak,p) -0.7480112279319301;
        }
        vector
        {
            areaAverage(peak,U) ( 0 0 0 );
            areaAverage(peak,vorticity) ( 0.2927886191182209 0.7469517330827171 -0.7236770148376899 );
        }
    }
}


// ************************************************************************* //
