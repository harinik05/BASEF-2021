/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "1.8/uniform/functionObjects";
    object      functionObjectProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

results
{
    forces
    {
        vector
        {
            normalForce     ( 5.814191328636142 -3.792075515900338 1.620885213204886 );
            tangentialForce ( 26.29418417756618 0.3849771854027132 -0.1669467007335762 );
            porousForce     ( 0 0 0 );
            normalMoment    ( 5.196201726391024 -11.45152183349005 -29.99023334153526 );
            tangentialMoment ( -0.2104971197463879 3.264081391558628 -63.09921457130609 );
            porousMoment    ( 0 0 0 );
        }
    }
    forceCoeffs
    {
        scalar
        {
            Cd              2.568670040496186;
            Cs              -0.1163150809977048;
            Cl              -0.27256786643981;
            CmRoll          0.3988563685315708;
            CmPitch         7.447155833027306;
            CmYaw           -0.6549952353545133;
            Cd(f)           1.683191388779663;
            Cd(r)           0.885478651716522;
            Cs(f)           -0.7131527758533657;
            Cs(r)           0.596837694855661;
            Cl(f)           7.310871899807402;
            Cl(r)           -7.583439766247211;
        }
    }
    surfaceFieldValue
    {
        scalar
        {
            areaAverage(peak,p) -0.4617671183593145;
        }
        vector
        {
            areaAverage(peak,U) ( 0 0 0 );
            areaAverage(peak,vorticity) ( -0.006407465390104886 -0.2937848633843368 -1.937578173281057 );
        }
    }
}


// ************************************************************************* //
