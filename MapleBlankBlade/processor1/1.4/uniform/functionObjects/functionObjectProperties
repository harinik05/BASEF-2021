/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "1.4/uniform/functionObjects";
    object      functionObjectProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

results
{
    forces
    {
        vector
        {
            normalForce     ( 6.517453513653258 -3.734955549148881 -5.582654958665717 );
            tangentialForce ( 27.09276469479542 0.4917694287896535 0.2402066746890701 );
            porousForce     ( 0 0 0 );
            normalMoment    ( -18.21732415815293 45.98107922042236 -31.75517580650008 );
            tangentialMoment ( 0.7638958163558386 0.127052833545671 -63.15494165439809 );
            porousMoment    ( 0 0 0 );
        }
    }
    forceCoeffs
    {
        scalar
        {
            Cd              2.688817456675894;
            Cs              0.4273958627181317;
            Cl              -0.2594548896287381;
            CmRoll          -1.396274267343767;
            CmPitch         7.592809396871854;
            CmYaw           3.688650564317442;
            Cd(f)           -0.05186553900582047;
            Cd(r)           2.740682995681714;
            Cs(f)           3.902348495676507;
            Cs(r)           -3.474952632958376;
            Cl(f)           7.463081952057484;
            Cl(r)           -7.722536841686223;
        }
    }
    surfaceFieldValue
    {
        scalar
        {
            areaAverage(peak,p) -0.5587839556499941;
        }
        vector
        {
            areaAverage(peak,U) ( 0 0 0 );
            areaAverage(peak,vorticity) ( 0.4976050970398997 -0.02627172563157746 -1.703569816750298 );
        }
    }
}


// ************************************************************************* //
