/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "0.9/uniform/functionObjects";
    object      functionObjectProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

results
{
    forces
    {
        vector
        {
            normalForce     ( 6.963315390783483 -4.791892111128415 0.9805298469957118 );
            tangentialForce ( 29.16154954346406 0.2639996644725563 -0.02703915413569886 );
            porousForce     ( 0 0 0 );
            normalMoment    ( 2.874276996923792 -4.877389507096327 -37.33147863010511 );
            tangentialMoment ( -0.04606751342996461 2.558690238045932 -68.29665682825366 );
            porousMoment    ( 0 0 0 );
        }
    }
    forceCoeffs
    {
        scalar
        {
            Cd              2.889989194739802;
            Cs              -0.07627925542880101;
            Cl              -0.3622313957324686;
            CmRoll          0.2262567586795061;
            CmPitch         8.450250836668701;
            CmYaw           -0.1854959415240315;
            Cd(f)           1.671251356049407;
            Cd(r)           1.218737838690395;
            Cs(f)           -0.223635569238432;
            Cs(r)           0.147356313809631;
            Cl(f)           8.269135138802467;
            Cl(r)           -8.631366534534935;
        }
    }
    surfaceFieldValue
    {
        scalar
        {
            areaAverage(peak,p) -0.7469923517764275;
        }
        vector
        {
            areaAverage(peak,U) ( 0 0 0 );
            areaAverage(peak,vorticity) ( 0.1430564389249266 -0.06530206700515753 -1.425209064352944 );
        }
    }
}


// ************************************************************************* //
