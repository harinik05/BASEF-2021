/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "1.1/uniform/functionObjects";
    object      functionObjectProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

results
{
    forces
    {
        vector
        {
            normalForce     ( 6.759211573550399 -4.108386096060601 5.621369376854783 );
            tangentialForce ( 28.15839187332693 0.2818525865349059 -0.01977330313399266 );
            porousForce     ( 0 0 0 );
            normalMoment    ( 8.110067716524172 -15.40821164890028 -33.76514122083218 );
            tangentialMoment ( -0.03344946320401679 2.808673683235271 -66.74854021862134 );
            porousMoment    ( 0 0 0 );
        }
    }
    forceCoeffs
    {
        scalar
        {
            Cd              2.793408275750187;
            Cs              -0.4481276858976631;
            Cl              -0.3061226807620555;
            CmRoll          0.6461294602656124;
            CmPitch         8.041094515156281;
            CmYaw           -1.0079630372532;
            Cd(f)           2.042833598140706;
            Cd(r)           0.7505746776094809;
            Cs(f)           -1.232026880202032;
            Cs(r)           0.7838991943043687;
            Cl(f)           7.888033174775254;
            Cl(r)           -8.194155855537309;
        }
    }
    surfaceFieldValue
    {
        scalar
        {
            areaAverage(peak,p) -0.8814593219464609;
        }
        vector
        {
            areaAverage(peak,U) ( 0 0 0 );
            areaAverage(peak,vorticity) ( 0.04672896961373436 -0.1971200467307864 -1.558282328676793 );
        }
    }
}


// ************************************************************************* //
