/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "1.5/uniform/functionObjects";
    object      functionObjectProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

results
{
    forces
    {
        vector
        {
            normalForce     ( 6.00197560083183 -3.64049116079886 0.7225899327292831 );
            tangentialForce ( 26.99945916814682 0.4621127210130305 -0.01693013822033499 );
            porousForce     ( 0 0 0 );
            normalMoment    ( 0.2767261581530851 3.160146602173469 -28.63048097090267 );
            tangentialMoment ( -0.02675609693452387 2.510444765173112 -63.41342534577471 );
            porousMoment    ( 0 0 0 );
        }
    }
    forceCoeffs
    {
        scalar
        {
            Cd              2.640114781518291;
            Cs              -0.05645278356071583;
            Cl              -0.2542702751828663;
            CmRoll          0.01999760489748489;
            CmPitch         7.36351250533419;
            CmYaw           0.4536473093877263;
            Cd(f)           1.34005499565663;
            Cd(r)           1.300059785861661;
            Cs(f)           0.4254209176073684;
            Cs(r)           -0.4818737011680843;
            Cl(f)           7.236377367742756;
            Cl(r)           -7.490647642925623;
        }
    }
    surfaceFieldValue
    {
        scalar
        {
            areaAverage(peak,p) -0.5260411761012195;
        }
        vector
        {
            areaAverage(peak,U) ( 0 0 0 );
            areaAverage(peak,vorticity) ( 0.3320377165910521 -0.1617649780718323 -1.760482098778618 );
        }
    }
}


// ************************************************************************* //
