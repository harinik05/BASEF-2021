/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "0.8/uniform/functionObjects";
    object      functionObjectProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

results
{
    forces
    {
        vector
        {
            normalForce     ( 6.449580803478611 -4.030107753120016 0.3005720407254467 );
            tangentialForce ( 29.82340612093671 0.3351324066282497 0.00394768268278807 );
            porousForce     ( 0 0 0 );
            normalMoment    ( 0.2633960241384631 -0.6722869837817395 -31.48719770074251 );
            tangentialMoment ( -0.04465491902204601 2.96303210141704 -69.47300698774008 );
            porousMoment    ( 0 0 0 );
        }
    }
    forceCoeffs
    {
        scalar
        {
            Cd              2.901838953953225;
            Cs              -0.02436157787265878;
            Cl              -0.2955980277193413;
            CmRoll          0.01749928840931337;
            CmPitch         8.076816375078606;
            CmYaw           0.183259609410824;
            Cd(f)           1.468418765385926;
            Cd(r)           1.433420188567299;
            Cs(f)           0.1710788204744946;
            Cs(r)           -0.1954403983471534;
            Cl(f)           7.929017361218935;
            Cl(r)           -8.224615388938275;
        }
    }
    surfaceFieldValue
    {
        scalar
        {
            areaAverage(peak,p) -0.6912805504170727;
        }
        vector
        {
            areaAverage(peak,U) ( 0 0 0 );
            areaAverage(peak,vorticity) ( 0.217756960791295 -0.03063195606943758 -1.273657177233766 );
        }
    }
}


// ************************************************************************* //
