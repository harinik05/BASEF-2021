/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "0.7/uniform/functionObjects";
    object      functionObjectProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

results
{
    forces
    {
        vector
        {
            normalForce     ( 7.106454230352988 -4.606610851368957 3.297105408718964 );
            tangentialForce ( 30.59604847712575 0.1312047427067197 -0.009873074849401867 );
            porousForce     ( 0 0 0 );
            normalMoment    ( 5.799723563859828 -12.58355252918923 -36.95974302457618 );
            tangentialMoment ( -0.0382529040991462 3.05854288560735 -71.85667112277564 );
            porousMoment    ( 0 0 0 );
        }
    }
    forceCoeffs
    {
        scalar
        {
            Cd              3.016200216598298;
            Cs              -0.2629785867095649;
            Cl              -0.3580324886929789;
            CmRoll          0.4609176527808545;
            CmPitch         8.705313131788145;
            CmYaw           -0.7620007714865507;
            Cd(f)           1.969017761080004;
            Cd(r)           1.047182455518295;
            Cs(f)           -0.8934900648413331;
            Cs(r)           0.6305114781317682;
            Cl(f)           8.526296887441656;
            Cl(r)           -8.884329376134634;
        }
    }
    surfaceFieldValue
    {
        scalar
        {
            areaAverage(peak,p) -0.6670852764064988;
        }
        vector
        {
            areaAverage(peak,U) ( 0 0 0 );
            areaAverage(peak,vorticity) ( 0.08263174940429829 0.1930926730779211 -1.203324644648571 );
        }
    }
}


// ************************************************************************* //
